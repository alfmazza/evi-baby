name: CI Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags:
      - 'v*'

env:
  IMAGE_NAME: myapp
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  JAVA_VERSION: '17'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build with Maven
        run: mvn -B -DskipTests verify

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          docker tag $REGISTRY/$IMAGE_NAME:${{ github.sha }} $REGISTRY/$IMAGE_NAME:latest
          
      - name: Push image to GHCR
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME:latest
          
  deploy-test:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Export KUBECONFIG for this job
        run: echo "KUBECONFIG=/etc/kubectl/config" >> $GITHUB_ENV

      - name: Sanity check kubectl (runner local)
        run: |
          which kubectl || echo "kubectl no est√° en PATH"
          kubectl version --client=true
          kubectl get nodes -o wide
          kubectl -n test get deploy,po

      - name: Set image & rollout (TEST)
        env:
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        run: |
          kubectl -n test set image deployment/myapp myapp=$IMAGE
          kubectl -n test rollout status deployment/myapp --timeout=180s